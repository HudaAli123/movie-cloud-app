name: Backend Continuous Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  BACKEND_URL: https://movie-cloud-app.onrender.com

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache Pipenv dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pipenv
          key: pipenv-${{ hashFiles('backend/Pipfile.lock') }}
          restore-keys: pipenv-

      - name: Install Pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: pipenv install --dev

      - name: Run lint
        run: pipenv run lint

  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache Pipenv dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pipenv
          key: pipenv-${{ hashFiles('backend/Pipfile.lock') }}
          restore-keys: pipenv-

      - name: Install Pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: pipenv install --dev

      - name: Run tests
        run: pipenv run test

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./backend/Dockerfile
          push: false
          tags: backend:test

      - name: Verify deployment
        run: |
          echo "‚úÖ Backend is deployed via Render at ${{ env.BACKEND_URL }}"
          echo "üìù Docker build successful"
          curl -f ${{ env.BACKEND_URL }}/movies || echo "‚ö†Ô∏è  Backend may be starting (Render spin-down)"
